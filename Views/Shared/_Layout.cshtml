<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TicketingSystem</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/TicketingSystem.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">TicketingSystem</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>

                    <!-- Login and Logout Buttons -->
                  @*   <div class="d-flex">
                        <a id="loginBtn" href="/Login" class="btn btn-primary ml-auto">Login</a>
                        <a id="logoutBtn" href="/Logout" class="btn btn-primary ml-auto" style="display:none;">Logout</a>
                    </div> *@
                    <div class="d-flex">
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <a id="logoutBtn" asp-controller="Home" asp-action="Logout" class="btn btn-primary ml-auto">Logout</a>
                        }
                        else
                        {
                            <a id="loginBtn" asp-controller="Home" asp-action="Login" class="btn btn-primary ml-auto">Login</a>
                        }
                    </div>

                </div>
            </div>
        </nav>

    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - TicketingSystem - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
<script>
    // async function getGlobalIPAddress() {
    //     try {
    //         const response = await fetch('/ip'); // Fetch the global IP from your API
    //         if (response.ok) {
    //             const data = await response.json();
    //             return data.ip; // Extract the IP address from the response
    //         } else {
    //             throw new Error('Failed to fetch IP address');
    //         }
    //     } catch (error) {
    //         console.error('Error fetching IP address:', error);
    //         return null;
    //     }
    // }
    // async function login() {
    //     const email = document.getElementById('email').value;
    //     const ipAddress = await getGlobalIPAddress(); // Get the IP address dynamically

    //     if (!ipAddress) {
    //         alert('Could not determine server IP address.');
    //         return;
    //     }

    //     try {
    //         const response = await fetch(`http://${ipAddress}:5000/api/administrators/login`, {
    //             method: 'POST',
    //             headers: {
    //                 'Content-Type': 'application/json'
    //             },
    //             body: JSON.stringify({ email })
    //         });

    //         if (response.ok) {
    //             const data = await response.json();
    //             alert(data.message);
    //             window.location.href = '/Administrator'; // Redirect to Administrator view
    //         } else {
    //             alert('Invalid credentials. Please try again.');
    //             document.getElementById("loginForm").reset();
    //         }
    //     } catch (error) {
    //         alert('An error occurred while trying to log in. Please try again.');
    //     }
    // }
    //---------------------------Hide login btn when administractor page shows up--------------------

    document.addEventListener('DOMContentLoaded', function () {
        // Get the Login and Logout button elements by their IDs
        const loginBtn = document.getElementById('loginBtn');
        const logoutBtn = document.getElementById('logoutBtn');

        function setButtonVisibility(loginVisible, logoutVisible) {
            if (loginBtn) {
                loginBtn.style.display = loginVisible ? 'block' : 'none';
            }
            if (logoutBtn) {
                logoutBtn.style.display = logoutVisible ? 'block' : 'none';
            }
        }

        // -------------------Index-----------------------------
        if (window.location.pathname === '/') {
            setButtonVisibility(true, false);
        }
        // ------------------Login----------------------------
        if (window.location.pathname.includes('/Login')) {
            setButtonVisibility(false, false);
        }
        // -------------------Administrator----------------------------
        if (window.location.pathname.includes('/Administrator')) {
            setButtonVisibility(false, true);
        }
    });


</script>
</html>
